# PS1

# Determine active Python virtualenv details.
function set_virtualenv () {
    if [ ! -z ${MB_ENV+x} ]
    then
        PROMPT_VIRTUALENV="${YELLOW}(`basename \"$MB_ENV\"`)"
    elif [ ! -z ${VIRTUAL_ENV+x} ]
    then
        PROMPT_VIRTUALENV="${YELLOW}(`basename \"$VIRTUAL_ENV\"`)"
    elif [ ! -z ${CONDA_DEFAULT_ENV+x} ]
    then
        PROMPT_VIRTUALENV="${YELLOW}(`basename \"$CONDA_DEFAULT_ENV\"`)"
    else
        PROMPT_VIRTUALENV=""
    fi
}

# Set the full bash prompt.
function set_bash_prompt () {
  set_virtualenv
  PS1="\n${PROMPT_VIRTUALENV}${GREEN}\u@\h${ESC}:\w\n${GREEN}\$${ESC} "
}

GREEN="\[\e[38;5;2m\]"
RED="\[\e[38;5;1m\]"
YELLOW="\[\e[38;5;11m\]"
ESC="\[\e[0m\]"
PROMPT_COMMAND=set_bash_prompt


# Aliases

alias ..="cd .."
alias ...="cd ../.."
alias ....="cd ../../.."
alias .....="cd ../../../.."
#eval $(dircolors -b $HOME/.config/LS_COLORS/LS_COLORS)
alias ls='ls --color=auto'
alias la="ls -A"
alias ll='ls -lh'
alias lla="ls -lhA"
alias lart="ls -lhArt"
alias lsd="ls -F | grep /$ | cut -d"/" -f1"
alias reload="source ${HOME}/.bashrc"
alias tmux="tmux -2"
alias tmkillcheval="tmux kill-session -t cheval"

# ssh
for host in `cat ${HOME}/.ssh/config | grep "Host " | cut -d" " -f2`
do
    alias ${host}="echo -ne \"\\033]0;${host}\\007\"; ssh -X ${host};"
done
function cicws {
    echo -ne "\\033]0;cicws\\007"
    n=$(shuf -i1-10 -n1)
    n=$(printf %02d ${n})
    ssh -X bedchr@cicws${n}
}

# Functions
dush () {
    du -sh "$@"* | sort -h
}
rsync_include () {
    cmd="rsync -av --include='*/' --include='${1}' --exclude='*' ${2} ${3}"
    echo $cmd | sh
}

# Switch gnome-terminal profiles
delay=75
alias dark="xdotool key --delay "${delay}" Alt+t p Return"
alias light="xdotool key --delay "${delay}" Alt+t p Down Return"

# Reset sound settings if not working after HDMI use
# https://help.ubuntu.com/community/SoundTroubleshootingProcedure
reset_pulsaudio () {
    sudo killall pulseaudio
    rm -r ~/.config/pulse/*
    rm -r ~/.pulse*
    echo "Wait ten seconds, then run this: pulseaudio -k"
    echo "Comment: alert sound was reset to default"
}

clean_pyc () {
    find $1 -name *pyc -print -delete
}
