#!/usr/bin/env bash
#
# bootstrap installs things.

SOURCE_DIR="$(cd "$(dirname "$0")" && pwd)"
DOTFILES_DIR="$(dirname ${SOURCE_DIR})"
source ${SOURCE_DIR}/print_functions.sh

set -e

link_file () {
  local src=$1 dst=$2

  local overwrite= backup= skip=
  local action=

  if [ -f "$dst" -o -d "$dst" -o -L "$dst" ]
  then

    if [ "$overwrite_all" == "false" ] && [ "$backup_all" == "false" ] && [ "$skip_all" == "false" ]
    then

      local currentSrc="$(readlink $dst)"

      if [ "$currentSrc" == "$src" ]
      then
        skip=true;

      else
        user "File already exists: $dst ($(basename "$src")), what do you want to do?\n\
        [s]kip, [S]kip all, [o]verwrite, [O]verwrite all, [b]ackup, [B]ackup all?"
        read -n 1 action

        case "$action" in
          o )
            overwrite=true;;
          O )
            overwrite_all=true;;
          b )
            backup=true;;
          B )
            backup_all=true;;
          s )
            skip=true;;
          S )
            skip_all=true;;
          * )
            ;;
        esac

      fi

    fi

    overwrite=${overwrite:-$overwrite_all}
    backup=${backup:-$backup_all}
    skip=${skip:-$skip_all}

    if [ "$overwrite" == "true" ]
    then
      rm -rf "$dst"
      success "removed $dst"
    fi

    if [ "$backup" == "true" ]
    then
      date=`date +%Y%m%d-%H%M%S`
      mv "$dst" "${dst}.backup${date}"
      success "moved $dst to ${dst}.backup${date}"
    fi

    if [ "$skip" == "true" ]
    then
      success "skipped $src"
    fi
  fi

  if [ "$skip" != "true" ]  # "false" or empty
  then
    mkdir -p $(dirname $2)
    ln -s "$1" "$2"
    success "linked $1 to $2"
  fi
}

install_dotfiles () {
  info 'installing dotfiles'

  local overwrite_all=false backup_all=false skip_all=false

  for src in $(find -H "$DOTFILES_DIR" -name '*.symlink*' -not -path '*.git*' | grep -v .swp)
  do

    dst=${src/${DOTFILES_DIR}\//${HOME}\/.}
    dst=${dst%.*}

    if [[ $dst == *".private"* ]]
    then
        dst=${dst/"private/"/""}

    elif [[ $dst == *".modulefiles"* ]]
    then
        dst=${dst/"-"/"/"}
    fi

    src_rel=$(realpath --relative-to=$(dirname ${dst}) ${src})

    #echo "$src_rel" "$dst"
    link_file "$src_rel" "$dst"
  done
}

echo ""
install_dotfiles
echo "  All installed!"
echo ""
