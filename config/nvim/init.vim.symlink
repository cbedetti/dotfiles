" Vundle
set nocompatible              " be iMproved, required
filetype off                  " required

" set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()

" let Vundle manage Vundle, required
Plugin 'VundleVim/Vundle.vim'
" Plugin list
Plugin 'vim-airline/vim-airline'
"Plugin 'altercation/vim-colors-solarized'
Plugin 'tpope/vim-fugitive'
Plugin 'tpope/vim-sensible'
Plugin 'euclio/vim-markdown-composer'
"Plugin 'Valloric/YouCompleteMe'
Plugin 'python-mode/python-mode'

" Plugin
"nerdtree - file drawer
"ctrlp - fuzzy file finder
"syntastic - syntax checker / linter

" All of your Plugins must be added before the following line
call vundle#end()            " required
filetype plugin indent on    " required

" Brief help
" :PluginList       - lists configured plugins
" :PluginInstall    - installs plugins; append `!` to update or just ->
" :PluginUpdate
" :PluginSearch foo - searches for foo; append `!` to refresh local cache
" :PluginClean      - confirms removal of unused plugins;


" vim-airline
set laststatus=2 " show the status line all the time
let g:airline#extensions#tabline#enabled=1 " show tabline
let g:airline_powerline_fonts=1
"let g:airline_theme='simple'
"let g:airline_theme='molokai'


" vim-colors-solarized
"syntax enable
"set background=dark
"set background=light
"colorscheme solarized
"call togglebg#map("<F4>")


" python-mode
let g:pymode_python = 'python3'
"let g:pymode_virtualenv_path = $VIRTUAL_ENV
let g:pymode_rope_completion = 1
let g:pymode_rope_complete_on_dot = 1


" YouCompleteMe
"let g:ycm_autoclose_preview_window_after_completion=1
"map <leader>g  :YcmCompleter GoToDefinitionElseDeclaration<CR>


" Vim behaviour
set t_Co=16 " for solarized
set hidden " Switch between buffers without saving
set encoding=utf-8
set scrolloff=4
set wildmenu
set wildmode=longest:full,full
set backspace=indent,eol,start


" 80-column
if exists('+colorcolumn')
    set colorcolumn=80
"else
"    au BufWinEnter * let w:m2=matchadd('ErrorMsg', '\%>80v.\+', -1)
endif


" Tabulation
set tabstop=4        " The width of a TAB is set to 4. Still it is a \t. It is
                     " just that vim will interpret it to be having a width of
                     " 4.
set softtabstop=0    " A combinaison of spaces and tabs are used to simulate
                     " tab stops at a width other than the (hard)tabstop
set expandtab        " Always uses spaces instead of tab characters
set shiftwidth=4     " Indents will have a width of 4
set smarttab         " Make TAB insert indents instead of tabs at the
                     " beginning of a line


" Line numbers
set number           " Enable line numbers
set relativenumber   " Enable relative line number
" :highlight LineNr term=bold cterm=NONE ctermfg=DarkGrey ctermbg=DarkGrey gui=NONE guifg=DarkGrey guibg=NONE


" Mapping
" One less key stroke for each command
nnoremap ; :
" Switching buffers
nmap <F2> :bp<cr>
nmap <F3> :bn<cr>
" Leader
let mapleader = ","
" Remove highlight
noremap <leader><space> :noh<cr>


" Invisible characters
set invlist
set listchars=tab:▸\ ,trail:⋅,extends:❯,precedes:❮, "eol:¬,
set showbreak=↪
highlight SpecialKey ctermbg=none " make the highlighting of tabs less annoying


" Searching
"nnoremap / /\v
"vnoremap / /\v
set ignorecase " case insensitive searching
set smartcase " case sensitive if contains a capital letter
set hlsearch " search highlighting
set incsearch " set incremental search like modern browsers

